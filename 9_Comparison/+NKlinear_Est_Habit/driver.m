%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

if isoctave || matlab_ver_less_than('8.6')
    clear all
else
    clearvars -global
    clear_persistent_variables(fileparts(which('dynare')), false)
end
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'NKlinear_Est_Habit';
M_.dynare_version = '5.0';
oo_.dynare_version = '5.0';
options_.dynare_version = '5.0';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(4,1);
M_.exo_names_tex = cell(4,1);
M_.exo_names_long = cell(4,1);
M_.exo_names(1) = {'epsA'};
M_.exo_names_tex(1) = {'epsA'};
M_.exo_names_long(1) = {'epsA'};
M_.exo_names(2) = {'epsG'};
M_.exo_names_tex(2) = {'epsG'};
M_.exo_names_long(2) = {'epsG'};
M_.exo_names(3) = {'epsM'};
M_.exo_names_tex(3) = {'epsM'};
M_.exo_names_long(3) = {'epsM'};
M_.exo_names(4) = {'epsMS'};
M_.exo_names_tex(4) = {'epsMS'};
M_.exo_names_long(4) = {'epsMS'};
M_.endo_names = cell(35,1);
M_.endo_names_tex = cell(35,1);
M_.endo_names_long = cell(35,1);
M_.endo_names(1) = {'UC'};
M_.endo_names_tex(1) = {'UC'};
M_.endo_names_long(1) = {'UC'};
M_.endo_names(2) = {'UL'};
M_.endo_names_tex(2) = {'UL'};
M_.endo_names_long(2) = {'UL'};
M_.endo_names(3) = {'R'};
M_.endo_names_tex(3) = {'R'};
M_.endo_names_long(3) = {'R'};
M_.endo_names(4) = {'H'};
M_.endo_names_tex(4) = {'H'};
M_.endo_names_long(4) = {'H'};
M_.endo_names(5) = {'W'};
M_.endo_names_tex(5) = {'W'};
M_.endo_names_long(5) = {'W'};
M_.endo_names(6) = {'YW'};
M_.endo_names_tex(6) = {'YW'};
M_.endo_names_long(6) = {'YW'};
M_.endo_names(7) = {'Y'};
M_.endo_names_tex(7) = {'Y'};
M_.endo_names_long(7) = {'Y'};
M_.endo_names(8) = {'K'};
M_.endo_names_tex(8) = {'K'};
M_.endo_names_long(8) = {'K'};
M_.endo_names(9) = {'I'};
M_.endo_names_tex(9) = {'I'};
M_.endo_names_long(9) = {'I'};
M_.endo_names(10) = {'tax'};
M_.endo_names_tex(10) = {'tax'};
M_.endo_names_long(10) = {'tax'};
M_.endo_names(11) = {'C'};
M_.endo_names_tex(11) = {'C'};
M_.endo_names_long(11) = {'C'};
M_.endo_names(12) = {'A'};
M_.endo_names_tex(12) = {'A'};
M_.endo_names_long(12) = {'A'};
M_.endo_names(13) = {'G'};
M_.endo_names_tex(13) = {'G'};
M_.endo_names_long(13) = {'G'};
M_.endo_names(14) = {'X'};
M_.endo_names_tex(14) = {'X'};
M_.endo_names_long(14) = {'X'};
M_.endo_names(15) = {'Q'};
M_.endo_names_tex(15) = {'Q'};
M_.endo_names_long(15) = {'Q'};
M_.endo_names(16) = {'PIE'};
M_.endo_names_tex(16) = {'PIE'};
M_.endo_names_long(16) = {'PIE'};
M_.endo_names(17) = {'MC'};
M_.endo_names_tex(17) = {'MC'};
M_.endo_names_long(17) = {'MC'};
M_.endo_names(18) = {'Rn'};
M_.endo_names_tex(18) = {'Rn'};
M_.endo_names_long(18) = {'Rn'};
M_.endo_names(19) = {'UCF'};
M_.endo_names_tex(19) = {'UCF'};
M_.endo_names_long(19) = {'UCF'};
M_.endo_names(20) = {'CF'};
M_.endo_names_tex(20) = {'CF'};
M_.endo_names_long(20) = {'CF'};
M_.endo_names(21) = {'HF'};
M_.endo_names_tex(21) = {'HF'};
M_.endo_names_long(21) = {'HF'};
M_.endo_names(22) = {'RF'};
M_.endo_names_tex(22) = {'RF'};
M_.endo_names_long(22) = {'RF'};
M_.endo_names(23) = {'ULF'};
M_.endo_names_tex(23) = {'ULF'};
M_.endo_names_long(23) = {'ULF'};
M_.endo_names(24) = {'WF'};
M_.endo_names_tex(24) = {'WF'};
M_.endo_names_long(24) = {'WF'};
M_.endo_names(25) = {'YF'};
M_.endo_names_tex(25) = {'YF'};
M_.endo_names_long(25) = {'YF'};
M_.endo_names(26) = {'KF'};
M_.endo_names_tex(26) = {'KF'};
M_.endo_names_long(26) = {'KF'};
M_.endo_names(27) = {'IF'};
M_.endo_names_tex(27) = {'IF'};
M_.endo_names_long(27) = {'IF'};
M_.endo_names(28) = {'GF'};
M_.endo_names_tex(28) = {'GF'};
M_.endo_names_long(28) = {'GF'};
M_.endo_names(29) = {'XF'};
M_.endo_names_tex(29) = {'XF'};
M_.endo_names_long(29) = {'XF'};
M_.endo_names(30) = {'QF'};
M_.endo_names_tex(30) = {'QF'};
M_.endo_names_long(30) = {'QF'};
M_.endo_names(31) = {'taxF'};
M_.endo_names_tex(31) = {'taxF'};
M_.endo_names_long(31) = {'taxF'};
M_.endo_names(32) = {'MS'};
M_.endo_names_tex(32) = {'MS'};
M_.endo_names_long(32) = {'MS'};
M_.endo_names(33) = {'dy'};
M_.endo_names_tex(33) = {'dy'};
M_.endo_names_long(33) = {'dy'};
M_.endo_names(34) = {'pinfobs'};
M_.endo_names_tex(34) = {'pinfobs'};
M_.endo_names_long(34) = {'pinfobs'};
M_.endo_names(35) = {'robs'};
M_.endo_names_tex(35) = {'robs'};
M_.endo_names_long(35) = {'robs'};
M_.endo_partitions = struct();
M_.param_names = cell(26,1);
M_.param_names_tex = cell(26,1);
M_.param_names_long = cell(26,1);
M_.param_names(1) = {'gy'};
M_.param_names_tex(1) = {'gy'};
M_.param_names_long(1) = {'gy'};
M_.param_names(2) = {'alp'};
M_.param_names_tex(2) = {'alp'};
M_.param_names_long(2) = {'alp'};
M_.param_names(3) = {'c'};
M_.param_names_tex(3) = {'c'};
M_.param_names_long(3) = {'c'};
M_.param_names(4) = {'zzeta'};
M_.param_names_tex(4) = {'zzeta'};
M_.param_names_long(4) = {'zzeta'};
M_.param_names(5) = {'betta'};
M_.param_names_tex(5) = {'betta'};
M_.param_names_long(5) = {'betta'};
M_.param_names(6) = {'delta'};
M_.param_names_tex(6) = {'delta'};
M_.param_names_long(6) = {'delta'};
M_.param_names(7) = {'sigma_c'};
M_.param_names_tex(7) = {'sigma\_c'};
M_.param_names_long(7) = {'sigma_c'};
M_.param_names(8) = {'rhoA'};
M_.param_names_tex(8) = {'rhoA'};
M_.param_names_long(8) = {'rhoA'};
M_.param_names(9) = {'rhoG'};
M_.param_names_tex(9) = {'rhoG'};
M_.param_names_long(9) = {'rhoG'};
M_.param_names(10) = {'rhoMS'};
M_.param_names_tex(10) = {'rhoMS'};
M_.param_names_long(10) = {'rhoMS'};
M_.param_names(11) = {'Ass'};
M_.param_names_tex(11) = {'Ass'};
M_.param_names_long(11) = {'Ass'};
M_.param_names(12) = {'phiX'};
M_.param_names_tex(12) = {'phiX'};
M_.param_names_long(12) = {'phiX'};
M_.param_names(13) = {'xi'};
M_.param_names_tex(13) = {'xi'};
M_.param_names_long(13) = {'xi'};
M_.param_names(14) = {'chi'};
M_.param_names_tex(14) = {'chi'};
M_.param_names_long(14) = {'chi'};
M_.param_names(15) = {'gammap'};
M_.param_names_tex(15) = {'gammap'};
M_.param_names_long(15) = {'gammap'};
M_.param_names(16) = {'rho_r'};
M_.param_names_tex(16) = {'rho\_r'};
M_.param_names_long(16) = {'rho_r'};
M_.param_names(17) = {'theta_pie'};
M_.param_names_tex(17) = {'theta\_pie'};
M_.param_names_long(17) = {'theta_pie'};
M_.param_names(18) = {'theta_y'};
M_.param_names_tex(18) = {'theta\_y'};
M_.param_names_long(18) = {'theta_y'};
M_.param_names(19) = {'hss'};
M_.param_names_tex(19) = {'hss'};
M_.param_names_long(19) = {'hss'};
M_.param_names(20) = {'Rss'};
M_.param_names_tex(20) = {'Rss'};
M_.param_names_long(20) = {'Rss'};
M_.param_names(21) = {'hfss'};
M_.param_names_tex(21) = {'hfss'};
M_.param_names_long(21) = {'hfss'};
M_.param_names(22) = {'Rfss'};
M_.param_names_tex(22) = {'Rfss'};
M_.param_names_long(22) = {'Rfss'};
M_.param_names(23) = {'PIEss'};
M_.param_names_tex(23) = {'PIEss'};
M_.param_names_long(23) = {'PIEss'};
M_.param_names(24) = {'trend'};
M_.param_names_tex(24) = {'trend'};
M_.param_names_long(24) = {'trend'};
M_.param_names(25) = {'conspie'};
M_.param_names_tex(25) = {'conspie'};
M_.param_names_long(25) = {'conspie'};
M_.param_names(26) = {'consr'};
M_.param_names_tex(26) = {'consr'};
M_.param_names_long(26) = {'consr'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 4;
M_.endo_nbr = 35;
M_.param_nbr = 26;
M_.orig_endo_nbr = 35;
M_.aux_vars = [];
options_.varobs = cell(3, 1);
options_.varobs(1)  = {'dy'};
options_.varobs(2)  = {'pinfobs'};
options_.varobs(3)  = {'robs'};
options_.varobs_id = [ 33 34 35  ];
M_ = setup_solvers(M_);
M_.Sigma_e = zeros(4, 4);
M_.Correlation_matrix = eye(4, 4);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
options_.linear = true;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
M_.nonzero_hessian_eqs = [];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.orig_eq_nbr = 35;
M_.eq_nbr = 35;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 14 49;
 0 15 0;
 0 16 50;
 0 17 0;
 0 18 0;
 0 19 0;
 1 20 0;
 2 21 0;
 3 22 51;
 0 23 0;
 4 24 0;
 5 25 0;
 6 26 0;
 0 27 52;
 0 28 0;
 7 29 53;
 0 30 0;
 8 31 0;
 0 32 54;
 9 33 0;
 0 34 0;
 0 35 0;
 0 36 0;
 0 37 0;
 0 38 0;
 10 39 0;
 11 40 55;
 12 41 0;
 0 42 56;
 0 43 0;
 0 44 0;
 13 45 0;
 0 46 0;
 0 47 0;
 0 48 0;]';
M_.nstatic = 17;
M_.nfwrd   = 5;
M_.npred   = 10;
M_.nboth   = 3;
M_.nsfwrd   = 8;
M_.nspred   = 13;
M_.ndynamic   = 18;
M_.dynamic_tmp_nbr = [5; 0; 0; 0; ];
M_.model_local_variables_dynamic_tt_idxs = {
};
M_.equations_tags = {
  1 , 'name' , 'UCF' ;
  2 , 'name' , '2' ;
  3 , 'name' , 'ULF' ;
  4 , 'name' , 'WF' ;
  5 , 'name' , 'YF' ;
  6 , 'name' , '6' ;
  7 , 'name' , '7' ;
  8 , 'name' , 'KF' ;
  9 , 'name' , 'XF' ;
  10 , 'name' , 'RF' ;
  11 , 'name' , '11' ;
  12 , 'name' , 'GF' ;
  13 , 'name' , '13' ;
  14 , 'name' , 'UC' ;
  15 , 'name' , '15' ;
  16 , 'name' , 'UL' ;
  17 , 'name' , 'W' ;
  18 , 'name' , 'Y' ;
  19 , 'name' , 'YW' ;
  20 , 'name' , 'MC' ;
  21 , 'name' , '21' ;
  22 , 'name' , 'K' ;
  23 , 'name' , 'X' ;
  24 , 'name' , 'R' ;
  25 , 'name' , '25' ;
  26 , 'name' , 'G' ;
  27 , 'name' , 'PIE' ;
  28 , 'name' , 'Rn' ;
  29 , 'name' , '29' ;
  30 , 'name' , 'A' ;
  31 , 'name' , '31' ;
  32 , 'name' , 'MS' ;
  33 , 'name' , 'dy' ;
  34 , 'name' , 'pinfobs' ;
  35 , 'name' , 'robs' ;
};
M_.mapping.UC.eqidx = [14 15 16 17 ];
M_.mapping.UL.eqidx = [16 17 ];
M_.mapping.R.eqidx = [15 24 29 ];
M_.mapping.H.eqidx = [14 16 19 20 26 ];
M_.mapping.W.eqidx = [17 20 26 ];
M_.mapping.YW.eqidx = [18 19 20 23 ];
M_.mapping.Y.eqidx = [18 21 28 33 ];
M_.mapping.K.eqidx = [19 22 23 ];
M_.mapping.I.eqidx = [21 22 25 ];
M_.mapping.tax.eqidx = [26 ];
M_.mapping.C.eqidx = [14 16 21 ];
M_.mapping.A.eqidx = [5 19 30 ];
M_.mapping.G.eqidx = [21 26 31 ];
M_.mapping.X.eqidx = [23 24 ];
M_.mapping.Q.eqidx = [23 24 25 ];
M_.mapping.PIE.eqidx = [27 28 29 34 ];
M_.mapping.MC.eqidx = [20 23 27 ];
M_.mapping.Rn.eqidx = [28 29 35 ];
M_.mapping.UCF.eqidx = [1 2 3 4 ];
M_.mapping.CF.eqidx = [1 3 7 ];
M_.mapping.HF.eqidx = [1 3 5 6 12 ];
M_.mapping.RF.eqidx = [2 10 ];
M_.mapping.ULF.eqidx = [3 4 ];
M_.mapping.WF.eqidx = [4 6 12 ];
M_.mapping.YF.eqidx = [5 6 7 9 ];
M_.mapping.KF.eqidx = [5 8 9 ];
M_.mapping.IF.eqidx = [7 8 11 ];
M_.mapping.GF.eqidx = [7 12 13 ];
M_.mapping.XF.eqidx = [9 10 ];
M_.mapping.QF.eqidx = [9 10 11 ];
M_.mapping.taxF.eqidx = [12 ];
M_.mapping.MS.eqidx = [27 32 ];
M_.mapping.dy.eqidx = [33 ];
M_.mapping.pinfobs.eqidx = [34 ];
M_.mapping.robs.eqidx = [35 ];
M_.mapping.epsA.eqidx = [30 ];
M_.mapping.epsG.eqidx = [13 31 ];
M_.mapping.epsM.eqidx = [28 ];
M_.mapping.epsMS.eqidx = [32 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.state_var = [7 8 9 11 12 13 16 18 20 26 27 28 32 ];
M_.exo_names_orig_ord = [1:4];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(35, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(4, 1);
M_.params = NaN(26, 1);
M_.endo_trends = struct('deflator', cell(35, 1), 'log_deflator', cell(35, 1), 'growth_factor', cell(35, 1), 'log_growth_factor', cell(35, 1));
M_.NNZDerivatives = [124; 0; -1; ];
M_.static_tmp_nbr = [5; 1; 0; 0; ];
M_.model_local_variables_static_tt_idxs = {
};
M_.params(1) = 0.2;
gy = M_.params(1);
M_.params(2) = 0.70;
alp = M_.params(2);
M_.params(4) = 7.0;
zzeta = M_.params(4);
M_.params(3) = 1/M_.params(4);
c = M_.params(3);
M_.params(5) = 0.99;
betta = M_.params(5);
M_.params(6) = 0.0250;
delta = M_.params(6);
M_.params(7) = 2.0;
sigma_c = M_.params(7);
M_.params(12) = 1.24;
phiX = M_.params(12);
M_.params(13) = 0.75;
xi = M_.params(13);
M_.params(14) = 0;
chi = M_.params(14);
M_.params(15) = 0;
gammap = M_.params(15);
M_.params(16) = 0.7;
rho_r = M_.params(16);
M_.params(17) = 1.5;
theta_pie = M_.params(17);
M_.params(18) = 0.3;
theta_y = M_.params(18);
M_.params(11) = 1;
Ass = M_.params(11);
M_.params(8) = 0.7;
rhoA = M_.params(8);
M_.params(9) = 0.7;
rhoG = M_.params(9);
M_.params(10) = 0.7;
rhoMS = M_.params(10);
M_.params(24) = 0.4;
trend = M_.params(24);
M_.params(23) = 1.005;
PIEss = M_.params(23);
M_.params(26) = (1.0*M_.params(23)/M_.params(5)-1)*100;
consr = M_.params(26);
M_.params(25) = M_.params(23)-1;
conspie = M_.params(25);
M_.params(19) = 0.4;
hss = M_.params(19);
M_.params(21) = M_.params(19);
hfss = M_.params(21);
M_.params(20) = 1.0/M_.params(5);
Rss = M_.params(20);
M_.params(22) = M_.params(20);
Rfss = M_.params(22);
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
M_.Sigma_e(2, 2) = (1)^2;
M_.Sigma_e(3, 3) = (1)^2;
M_.Sigma_e(4, 4) = (1)^2;
estim_params_.var_exo = zeros(0, 10);
estim_params_.var_endo = zeros(0, 10);
estim_params_.corrx = zeros(0, 11);
estim_params_.corrn = zeros(0, 11);
estim_params_.param_vals = zeros(0, 10);
estim_params_.var_exo = [estim_params_.var_exo; 1, NaN, (-Inf), Inf, 4, 0.10, 2.00, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 2, NaN, (-Inf), Inf, 4, 0.10, 2.00, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 3, NaN, (-Inf), Inf, 4, 0.10, 2.00, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 4, NaN, (-Inf), Inf, 4, 0.10, 2.00, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 8, NaN, (-Inf), Inf, 1, 0.50, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 9, NaN, (-Inf), Inf, 1, 0.50, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 10, NaN, (-Inf), Inf, 1, 0.50, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 19, NaN, (-Inf), Inf, 1, 0.40, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 12, NaN, (-Inf), Inf, 3, 2.00, 1.50, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 7, NaN, (-Inf), Inf, 2, 2.00, 0.50, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 14, NaN, (-Inf), Inf, 1, 0.70, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 13, NaN, (-Inf), Inf, 1, 0.50, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 2, NaN, (-Inf), Inf, 1, 0.70, 0.05, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 17, NaN, (-Inf), Inf, 3, 2.00, 0.25, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 16, NaN, (-Inf), Inf, 1, 0.75, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 18, NaN, (-Inf), Inf, 3, 0.125, 0.05, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 25, NaN, (-Inf), Inf, 2, 0.625, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 24, NaN, (-Inf), Inf, 3, 0.40, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 26, NaN, (-Inf), Inf, 3, 1.5, 0.1, NaN, NaN, NaN ];
options_.plot_priors=0;
options_.mh_drop = 0.2;
options_.mh_jscale = 0.40;
options_.mh_nblck = 2;
options_.mh_replic = 10000;
options_.mode_check.status = true;
options_.mode_compute = 4;
options_.prefilter = 0;
options_.presample = 4;
options_.datafile = 'us_data';
options_.mode_file = 'NKlinear_Est_All_mode';
options_.first_obs = 143;
options_.order = 1;
var_list_ = {};
oo_recursive_=dynare_estimation(var_list_);
get_posterior_parameters('mean',M_,estim_params_,oo_,'lik_') 
options_.ar = 10;
options_.irf = 20;
options_.order = 2;
var_list_ = {'dy';'pinfobs';'robs';'Y';'C';'I';'PIE';'Rn'};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);
options_.parameter_set = 'posterior_mean';
var_list_ = {'dy';'pinfobs';'robs'};
oo_ = shock_decomposition(M_,oo_,options_,var_list_,bayestopt_,estim_params_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'NKlinear_Est_Habit_results.mat'], 'oo_recursive_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
